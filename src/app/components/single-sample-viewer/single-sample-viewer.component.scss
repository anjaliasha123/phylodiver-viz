/**************** single sample viewer ******************/

@import '../../styles/core';


//**************** css ******************

.single_sample_viewer {
  display: flex;
  flex-direction: column;

	position: absolute;
	left: 0px;
	right: 0px;
	top: 0px;
	bottom: 0px;
//	z-index: get_index(interface);
  z-index: 100;

	color: color_variable('text');
	background: {
		color: color_variable('background');
	}

  &.navigation_mode {
    .phyloviz_diagram {
//      height: 120px;
    }

    ::ng-deep phylo-node .summary {
      display: none;
    }

    ::ng-deep phylo-node {
      &.is_selected {
        min: {
          height: 0px;
        }
      }
    }

    .legend {
      height: 120px;
    }
  }

	.header {
    background: {
      color: #eee;
    }

		padding: ($padding * .25) ($padding);

    .header_container {
      display: flex;
      align-items: center;
      gap: $padding * .5;

      max: {
        width: $page_width;
      }

      margin: {
        right: auto;
        left: auto;
      }
    }

		input {
			padding: ($padding * 0.25);

			border: 1px solid color_variable('header_border');

			@include border-radius($border_radius);
		}

    select {
			padding: ($padding * 0.25);

			border: 1px solid color_variable('header_border');

			@include border-radius($border_radius);
    }

    a:link,
    a:active,
    a:visited {
      color: color_variable('link');

      font: {
        weight: bold;
      }
      text: {
        decoration: none;
      }
    }

    a:hover {
      color: color_variable('link_hover');

      text: {
        decoration: underline;
      }
    }

    .links {
      display: flex;
      gap: $padding * .25;

      font: {
        size: .8rem;
      }

      .link {
        a {
          & + a {
            margin: {
              left: $padding * .2;
            }
            padding: {
              left: $padding * .2;
            }

            border-left: 2px solid color_variable('link');
          }
        }
      }
    }
	}

  .content {
    overflow: {
      y: auto;
    }

    flex-grow: 1; //to fill the window height

    display: flex;
    justify-content: center;
    align-items: center;

    min: {
      height: 200px;
    }

    padding: 0px $padding;
  }

  phylo-table {
    flex-grow: 100; //to fill the window height when open

    overflow: {
      y: auto;
    }
  }

  .tree_selector {
  }
}

.phyloviz_diagram {
  position: relative;
  display: flex;

  height: calc(100% - #{$padding * 4});

  margin: {
    top: $padding;
    bottom: $padding;

    right: 160px; //give room for end block
  }

  @include transition(#{height .2s easing($ease-in-out)});

  &.has_selected_block {
    ::ng-deep phylo-node {
      &:not(.is_visible) {
        @include opacity(40);
      }

      &:not(.is_selected) {
        > .block_info {
          width: 5vw;

          .info {
            .label {
              display: none;
            }

            .value {
              div:not(.group) {
                display: none;
              }
            }
          }
        }
      }

      &.is_selected {
        > .block_info {
          width: 25vw;
        }
      }
    }
  }

  &.selected {
    &:after {
      display: block;
    }

    .subclone_label {
      background: {
        color: #fff;
      }

      border: {
        color: color_variable('selected_color');
      }
    }
  }

  .subclone_label {
    cursor: pointer;

    position: absolute;
    left: calc(100% + 30px); //halfway into end_block
    top: -32px;
    z-index: 100;

    color: #888;

    padding: 2px ($padding * .5);

    font: {
      size: 90%;
    }
    text: {
      transform: capitalize;
    }

    border: 2px solid transparent;

    white-space: nowrap;

    @include border-radius($border_radius);
    @include translate(-50%, 0%);

    &:hover {
      color: #fff;
      background: {
        color: #888;
      }
    }
  }
}

.legend {
  display: flex;

  min: {
    height: 120px;
  }
  height: 360px;

  background: {
    color: color_variable('legend_background');
  }

  padding: ($padding * .75);

  @include border-radius($border_radius * 2);
  @include transition(#{height .2s easing($ease-in-out)});
}
