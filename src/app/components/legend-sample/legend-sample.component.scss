/**************** legend-node ******************/

@import '../../styles/core';


//**************** css ******************

:host {
  cursor: pointer;

  display: flex;
  flex-direction: column;
  align-items: center;

  color: color_variable('legend_text');
  background: {
    color: color_variable('legend_background');
  }

  &:hover {
    .nodes {
      background: {
        color: color_variable('background');
      }

      border: {
        color: color_variable('legend_border');
      }
    }
  }

  &.is_selected {
    .legend_node_label {
      background: {
        color: #fff;
      }

      border: {
        color: color_variable('selected_color');
      }
    }

    .nodes {
      background: {
        color: color_variable('background');
      }

      border: {
        color: color_variable('legend_border');
      }
    }

    .node {
      .count {
        display: block;
      }
    }
  }
}

.legend_node_label {
  cursor: pointer;

  display: flex;
  justify-content: center;
  align-items: center;

  min: {
    width: 70px;
  }
  max: {
    width: 110px;
  }

  padding: ($padding * .25);

  font: {
    size: $font_size_min + 2;
  }

  border: 2px solid transparent;

  @include border-radius($border_radius);
  @include hide_overflow();
}

.nodes {
  flex-grow: 1;

  display: flex;
  flex-direction: column;
  justify-content: center;

  width: 36px;
  height: 100%;

  margin: {
    top: $padding * .25;
  }
  padding: ($padding * .2);

  border: 2px solid transparent;

  @include border-radius(6px);
  @include box-sizing(border-box);
}

.node {
  position: relative;

  min: {
    height: 6px; //8px
  }

  margin: 2px;

  @include transition(#{flex .3s easing($ease-in-out), min-height .2s easing($ease-in-out)});

  .block {
    height: 100%;

    @include border-radius(6px);
  }

  .count {
    display: none;

    position: absolute;
    left: 100%;
    top: 50%;
    z-index: 100;

    padding: {
      left: $padding * .6;
    }

    color: color_variable('legend_text');

    font: {
      size: $font_size_min;
    }

    @include translate(0%, -50%);
  }
}
